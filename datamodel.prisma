type User {
  id: ID! @id 
  username: String!
  nickname: String! @unique
  phone: String! @unique
  authority1: Boolean! @default(value: false)
  authority2: Boolean! @default(value: false)
  assets: [Asset!]! @relation(name: "AssetsOfUser", onDelete: CASCADE)
  points : [Point!]! @relation(name: "PointsOfUser", onDelete: CASCADE)
  receivePoints: [Point!]! @relation(name: "PointsOfrecivers", onDelete: CASCADE)
  tickets: [Ticket!]! @relation(name: "TicketsOfUser", onDelete: CASCADE)
  receiveTickets: [Ticket!]! @relation(name: "TicketsOfrecivers", onDelete: CASCADE)
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  stores: [Store!]! @relation(name: "StoresOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  freeposts: [FreePost!]! @relation(name: "FreePostsOfUser", onDelete: CASCADE)
  freelikes: [FreeLike!]! @relation(name: "FreeLikesOfUser", onDelete: CASCADE)
  freecomments: [FreeComment!]! @relation(name: "FreeCommentsOfUser", onDelete: CASCADE)
  loginSecret: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

 type FreePost {
   id: ID! @id
   title: String!
   caption: String!
   user: User @relation(name: "FreePostsOfUser")
   files: [FreeFile!]! @relation(name: "FreeFilesOfPost", onDelete: CASCADE)
   likes: [FreeLike!]! @relation(name: "FreeLikeOfPost", onDelete: CASCADE)
   comments: [FreeComment!]! @relation(name: "FreeCommentOfPost", onDelete: CASCADE)
   createdAt: DateTime! @createdAt
   updatedAt: DateTime! @updatedAt
 }

 type FreeLike {
   id: ID! @id
   user: User @relation(name: "FreeLikesOfUser")
   post: FreePost @relation(name: "FreeLikeOfPost")
   createdAt: DateTime! @createdAt
   updatedAt: DateTime! @updatedAt
 }

 type FreeComment {
   id: ID! @id
   text: String!
   user: User @relation(name: "FreeCommentsOfUser")
   post: FreePost @relation(name: "FreeCommentOfPost")
   createdAt: DateTime! @createdAt
   updatedAt: DateTime! @updatedAt
 }

 type FreeFile {
   id: ID! @id
   url: String!
   post: FreePost @relation(name: "FreeFilesOfPost")
   createdAt: DateTime! @createdAt
   updatedAt: DateTime! @updatedAt
 }

type Point {
  id: ID! @id
  currentPoint: Int!
  previousPoint: Int!
  user: User @relation(name: "PointsOfUser")
  receiver: User @relation(name: "PointsOfrecivers")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Ticket {
  id: ID! @id
  user: User @relation(name: "TicketsOfUser")
  caption: String!
  receiver: User @relation(name: "TicketsOfrecivers")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Asset {
  id: ID! @id
  assets: Int!
  date: DateTime!
  user: User @relation(name: "AssetsOfUser")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Store {
  id: ID! @id 
  storename: String! @unique
  number: String
  city: String
  advertise: Boolean! @default(value: false)
  location: String
  caption: String
  open: String
  close: String
  user: User @relation(name: "StoresOfUser")
  storefiles: [StoreFile!]! @relation(name: "FilesOfStore", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfStore", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type StoreFile {
  id: ID! @id
  url: String!
  store: Store @relation(name: "FilesOfStore")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Post {
  id: ID! @id 
  title: String! 
  finished: Boolean! @default(value: false)
  caption: String
  user: User @relation(name: "PostsOfUser")
  postfiles: [PostFile!] @relation(name: "FilesOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type PostFile {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  store: Store @relation(name: "LikeOfStore")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Advertise {
  id: ID! @id
  caption: String
  advertisefiles: [AdvertiseFile!]! @relation(name: "AdvertisesOfPost", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type AdvertiseFile {
  id: ID! @id
  url: String!
  advertise: Advertise @relation(name: "AdvertisesOfPost")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}